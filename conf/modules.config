/*
========================================================================================
    Config file for defining DSL2 per module options
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

params {
    modules {
        'sdrfparsing' {
            args    = 'convert-openms -t2 -l'
        }
        'decoydatabase' {
            args    = ''
            publish_files = ['log': 'logs']
        }
        'multiqc' {
            args    = ''
        }
        'thermorawfileparser' {
            args    = ''
        }
        'mzmlindexing' {
            args    = ''
            publish_files = ['log': '']
        }
        'openmspeakpicker' {
            args    = ''
            publish_files = ['log': '']
        }
        'isobaricanalyzer' {
            args    = ''
            publish_files = ['log': '']
        }
        'searchenginemsgf' {
            args    = ''
        }
        'searchenginecomet' {
            args    = ''
        }
        'indexpeptides' {
            args    = ''
            publish_files = ['log': '']
        }
        'extractpsmfeature' {
            args    = ''
            publish_files = ['log': '']
        }
        'percolator' {
            args    = ''
        }
        'falsediscoveryrate' {
            args    = ''
        }
        'idpep' {
            args    = ''
        }
        'idscoreswitcher' {
            args    = '-new_score_orientation lower_better'
        }
        'consensusid' {
            args    = ''
        }
        'idfilter' {
            args    = ''
            suffix  = '.idXML'
        }
        'luciphoradapter' {
            args    = ''
            publish_files = ['log': '']
        }
        'idmapper' {
            args    = ''
            publish_files = ['log': '','consensusXML':'']
        }
        'filemerge' {
            args    = ''
        }
        'epifany' {
            args    = ''
            publish_files = ['log': '']
        }
        'proteininference' {
            args    = ''
            publish_files = ['log': '']
        }
        'idconflictresolver' {
            args    = ''
        }
        'proteinquantifier' {
            args    = ''
        }
        'msstatsconverter' {
            args    = ''
        }
        'pmultiqc' {
            args    = ''
        }
    }

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            pattern: '*_versions.yml'
        ]
    }

}
